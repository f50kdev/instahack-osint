import React from 'react';
import jsPDF from 'jspdf';

const ReportExporter = ({ profile, domainInfo, emails, phoneInfo }) => {
  const exportToJSON = () => {
    const reportData = {
      timestamp: new Date().toISOString(),
      profile,
      domainInfo,
      emails,
      phoneInfo
    };
    
    const dataStr = JSON.stringify(reportData, null, 2);
    const dataBlob = new Blob([dataStr], { type: 'application/json' });
    const url = URL.createObjectURL(dataBlob);
    
    const link = document.createElement('a');
    link.href = url;
    link.download = `f50hack-osint-report-${new Date().toISOString().split('T')[0]}.json`;
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
    URL.revokeObjectURL(url);
  };

  const exportToPDF = async () => {
    try {
      const pdf = new jsPDF('p', 'mm', 'a4');
      
      // Título
      pdf.setFontSize(20);
      pdf.setTextColor(255, 165, 0); // Orange
      pdf.text('F50HACK - OSINT Report', 20, 20);
      
      pdf.setFontSize(12);
      pdf.setTextColor(128, 128, 128);
      pdf.text(`Generated on: ${new Date().toLocaleString()}`, 20, 30);
      
      let yPosition = 40;
      
      // Perfil do usuário
      if (profile) {
        pdf.setFontSize(16);
        pdf.setTextColor(255, 255, 255);
        pdf.text('👤 User Profile', 20, yPosition);
        yPosition += 10;
        
        pdf.setFontSize(10);
        pdf.setTextColor(200, 200, 200);
        pdf.text(`Name: ${profile.name}`, 20, yPosition);
        yPosition += 5;
        pdf.text(`Username: ${profile.user}`, 20, yPosition);
        yPosition += 5;
        pdf.text(`Posts: ${profile.posts}`, 20, yPosition);
        yPosition += 5;
        pdf.text(`Followers: ${profile.followers}`, 20, yPosition);
        yPosition += 5;
        pdf.text(`Following: ${profile.following}`, 20, yPosition);
        yPosition += 5;
        pdf.text(`Location: ${profile.location}`, 20, yPosition);
        yPosition += 5;
        pdf.text(`Timezone: ${profile.timezone}`, 20, yPosition);
        yPosition += 10;
      }
      
      // Análise de domínio
      if (domainInfo) {
        pdf.setFontSize(16);
        pdf.setTextColor(255, 255, 255);
        pdf.text('🌐 Domain Analysis', 20, yPosition);
        yPosition += 10;
        
        pdf.setFontSize(10);
        pdf.setTextColor(200, 200, 200);
        pdf.text(`Domain: ${domainInfo.domain}`, 20, yPosition);
        yPosition += 5;
        pdf.text(`IP: ${domainInfo.ip}`, 20, yPosition);
        yPosition += 5;
        pdf.text(`Location: ${domainInfo.city}, ${domainInfo.country}`, 20, yPosition);
        yPosition += 5;
        pdf.text(`ISP: ${domainInfo.isp}`, 20, yPosition);
        yPosition += 10;
      }
      
      // Emails
      if (emails && emails.length > 0) {
        pdf.setFontSize(16);
        pdf.setTextColor(255, 255, 255);
        pdf.text('📧 Email Analysis', 20, yPosition);
        yPosition += 10;
        
        emails.forEach((email, index) => {
          if (yPosition > 250) {
            pdf.addPage();
            yPosition = 20;
          }
          
          pdf.setFontSize(10);
          pdf.setTextColor(200, 200, 200);
          pdf.text(`Email ${index + 1}: ${email.email}`, 20, yPosition);
          yPosition += 5;
          pdf.text(`Confidence: ${email.confidence}%`, 20, yPosition);
          yPosition += 5;
          pdf.text(`Verified: ${email.verified ? 'Yes' : 'No'}`, 20, yPosition);
          yPosition += 5;
          pdf.text(`Sources: ${email.sources.join(', ')}`, 20, yPosition);
          yPosition += 8;
        });
      }
      
      // Informações do telefone
      if (phoneInfo) {
        if (yPosition > 250) {
          pdf.addPage();
          yPosition = 20;
        }
        
        pdf.setFontSize(16);
        pdf.setTextColor(255, 255, 255);
        pdf.text('📱 Phone Analysis', 20, yPosition);
        yPosition += 10;
        
        pdf.setFontSize(10);
        pdf.setTextColor(200, 200, 200);
        pdf.text(`Phone: ${phoneInfo.phone}`, 20, yPosition);
        yPosition += 5;
        pdf.text(`Country: ${phoneInfo.country}`, 20, yPosition);
        yPosition += 5;
        pdf.text(`Carrier: ${phoneInfo.carrier}`, 20, yPosition);
        yPosition += 5;
        pdf.text(`Location: ${phoneInfo.location}`, 20, yPosition);
        yPosition += 5;
        pdf.text(`Valid: ${phoneInfo.valid ? 'Yes' : 'No'}`, 20, yPosition);
      }
      
      // Footer
      pdf.setFontSize(8);
      pdf.setTextColor(128, 128, 128);
      pdf.text('Generated by F50HACK OSINT Dashboard', 20, 280);
      
      pdf.save(`f50hack-osint-report-${new Date().toISOString().split('T')[0]}.pdf`);
    } catch (error) {
      console.error('Error generating PDF:', error);
      alert('Erro ao gerar PDF. Verifique o console para mais detalhes.');
    }
  };

  const hasData = profile || domainInfo || (emails && emails.length > 0) || phoneInfo;

  if (!hasData) {
    return null;
  }

  return (
    <div className="bg-gray-900 rounded-lg p-6 mb-6">
      <h2 className="text-2xl font-bold text-white mb-4">📄 Exportar Relatório</h2>
      
      <div className="flex gap-4">
        <button
          onClick={exportToJSON}
          className="bg-blue-600 hover:bg-blue-700 text-white px-6 py-2 rounded font-semibold transition flex items-center gap-2"
        >
          📊 Exportar JSON
        </button>
        
        <button
          onClick={exportToPDF}
          className="bg-red-600 hover:bg-red-700 text-white px-6 py-2 rounded font-semibold transition flex items-center gap-2"
        >
          📄 Exportar PDF
        </button>
      </div>
      
      <div className="mt-4 p-4 bg-gray-800 rounded-lg">
        <h4 className="text-white font-semibold mb-2">📋 Dados disponíveis para exportação:</h4>
        <ul className="text-gray-300 text-sm space-y-1">
          {profile && <li>• Perfil do usuário</li>}
          {domainInfo && <li>• Análise de domínio</li>}
          {emails && emails.length > 0 && <li>• Emails encontrados ({emails.length})</li>}
          {phoneInfo && <li>• Informações do telefone</li>}
        </ul>
      </div>
    </div>
  );
};

export default ReportExporter; 